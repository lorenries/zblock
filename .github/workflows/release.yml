name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build and Publish
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Zig
        uses: mlugg/setup-zig@v2
        with:
          version: 0.15.1

      - name: Build release binaries
        run: zig build -Doptimize=ReleaseFast

      - name: Run tests
        run: zig build test

      - name: Determine artifact metadata
        run: |
          ARCH=$(uname -m)
          OS=${RUNNER_OS:-unknown}
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VERSION="${GITHUB_REF_NAME}"
          else
            VERSION="${GITHUB_SHA}"
          fi
          ARCHIVE_NAME="zblock-${VERSION}-${OS}-${ARCH}.zip"
          PACKAGE_ROOT="$RUNNER_TEMP/zblock-package"
          PAYLOAD_DIR="$PACKAGE_ROOT/zblock"
          FINAL_DIST="$PWD/dist"
          ARCHIVE_PATH="$PACKAGE_ROOT/$ARCHIVE_NAME"
          echo "ARCH=$ARCH" >> "$GITHUB_ENV"
          echo "OS=$OS" >> "$GITHUB_ENV"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> "$GITHUB_ENV"
          echo "PACKAGE_ROOT=$PACKAGE_ROOT" >> "$GITHUB_ENV"
          echo "PAYLOAD_DIR=$PAYLOAD_DIR" >> "$GITHUB_ENV"
          echo "FINAL_DIST=$FINAL_DIST" >> "$GITHUB_ENV"
          echo "ARCHIVE_PATH=$ARCHIVE_PATH" >> "$GITHUB_ENV"

      - name: Import signing certificate
        if: runner.os == 'macOS' && startsWith(github.ref, 'refs/tags/')
        env:
          MACOS_CERT_P12: ${{ secrets.MACOS_CERT_P12 }}
          MACOS_CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          set -eo pipefail
          SIGNING_KEYCHAIN="$RUNNER_TEMP/zblock-signing.keychain-db"
          CERT_PATH="$RUNNER_TEMP/zblock-cert.p12"
          echo "$MACOS_CERT_P12" | base64 --decode > "$CERT_PATH"
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$SIGNING_KEYCHAIN"
          security set-keychain-settings "$SIGNING_KEYCHAIN"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$SIGNING_KEYCHAIN"
          security list-keychains -d user -s "$SIGNING_KEYCHAIN" $(security list-keychains -d user | tr -d '"')
          security default-keychain -s "$SIGNING_KEYCHAIN"
          security import "$CERT_PATH" -k "$SIGNING_KEYCHAIN" -P "$MACOS_CERT_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$SIGNING_KEYCHAIN"
          security find-identity -v -p codesigning "$SIGNING_KEYCHAIN"
          rm -f "$CERT_PATH"
          echo "SIGNING_KEYCHAIN=$SIGNING_KEYCHAIN" >> "$GITHUB_ENV"

      - name: Code sign binaries
        if: runner.os == 'macOS' && startsWith(github.ref, 'refs/tags/')
        env:
          SIGNING_IDENTITY: ${{ secrets.MACOS_CERT_IDENTITY }}
        run: |
          set -eo pipefail
          codesign --deep --force --options runtime --timestamp \
            --keychain "$SIGNING_KEYCHAIN" \
            --sign "$SIGNING_IDENTITY" zig-out/bin/zblock
          codesign --deep --force --options runtime --timestamp \
            --keychain "$SIGNING_KEYCHAIN" \
            --sign "$SIGNING_IDENTITY" zig-out/bin/zblockd

      - name: Package signed binaries
        if: runner.os == 'macOS'
        run: |
          set -eo pipefail
          rm -rf "$PACKAGE_ROOT"
          mkdir -p "$PAYLOAD_DIR"
          cp zig-out/bin/zblock "$PAYLOAD_DIR/"
          cp zig-out/bin/zblockd "$PAYLOAD_DIR/"
          ditto -c -k --sequesterRsrc --keepParent "$PAYLOAD_DIR" "$ARCHIVE_PATH"

      - name: Notarize binaries
        if: runner.os == 'macOS' && startsWith(github.ref, 'refs/tags/')
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        run: |
          set -eo pipefail
          xcrun notarytool submit "$ARCHIVE_PATH" \
            --apple-id "$APPLE_ID" \
            --team-id "$APPLE_TEAM_ID" \
            --password "$APPLE_APP_SPECIFIC_PASSWORD" \
            --wait

      - name: Prepare artifacts
        run: |
          rm -rf "$FINAL_DIST"
          mkdir -p "$FINAL_DIST"
          cp "$ARCHIVE_PATH" "$FINAL_DIST/$ARCHIVE_NAME"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: zblock-${{ env.VERSION }}-${{ env.OS }}-${{ env.ARCH }}
          path: dist/${{ env.ARCHIVE_NAME }}

      - name: Publish release assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/${{ env.ARCHIVE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup signing keychain
        if: always() && runner.os == 'macOS' && env.SIGNING_KEYCHAIN != ''
        run: |
          security default-keychain -s login.keychain || true
          security list-keychains -d user -s $(security list-keychains -d user | tr -d '"' | tr ' ' '\n' | grep -v "$SIGNING_KEYCHAIN")
          security delete-keychain "$SIGNING_KEYCHAIN" || true
